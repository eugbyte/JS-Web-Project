/*CSS GRID*/
.container {
    display: grid;
    position: relative;
    margin: auto;
    grid-gap: 10px;
    grid-template-areas: 
                    "topnav topnav"
                    "carousel carousel"
                    "left right"
                    "footer footer";
    grid-template-columns: 1fr 1fr;
    grid-template-rows: 1fr 1fr 1fr 1fr;
    justify-content: center;
    }

.topnav {
  background-color: beige;
  grid-area: topnav;
}

.carousel {
    background-color: cornflowerblue;
    grid-area: carousel;
}

.left {
  background-color: cornflowerblue;
	grid-area: left;
}

.right {
  background-color: beige;
  grid-area: right;
}

footer {
  background-color: beige;
  grid-area: footer;
}

/*NAVIGATION BAR*/


.topnav ul {
    list-style-type: none;  /*remove the bullets*/
    margin: 0;  /*remove browser default settings, otherwise top and bottom margin will show. This flushes it to the top left*/
    padding: 0; 
    overflow: show; /*The overflow property specifies what should happen if content overflows an element's box -- in this case the overflow elements are hidden*/
    background-color: #454545; /*to add the background-color to <ul> instead of each <a> element so that you can have a full-width background color strecthing the entire width of the page*/
    /*.topnav ul more specific than .topnav, and thus the background color should override that of .topnav*/
    position: fixed; /*so that the navbar remains on top of the viewport even when scrolling down*/
    width: 100%; /*When we apply position:fixed to an element, it's taken out of the normal flow of the document, therefore it doesn't respect it's parent's element width. Therefore, must override it by specifying the width as 100% of the parent element, i.e. the document itself*/
    top: 0; /*If position: absolute; or position: fixed; - the top property sets the top edge of an element to a unit above/below the top edge of its nearest positioned ancestor.If position: static; - the top property has no effect.*/

}

.topnav a {
    display: block;  /*Displaying the links as block elements makes the whole link area clickable (not just the text), and it allows us to specify padding (and height, width, margins, etc. if you want)*/
    padding: 14px; /*specify some padding to space out the links <a>. Otherwise, as block elements that are being floated, they will appear right next to one another*/
    text-align: center;
    color: white;
    text-decoration: none;  /*to remove the underline thats is the default style for links <a>*/
    font-family: "Arial";
}

li {
    float: left;    /*because the links <a> are set as block elements, but we still want to make them in a single line, we can use the float property to to get block elements to slide next to each other*/
}

/* Change the link color to #111 (black) on hover */
li a:hover{
    background-color: #111;
}

/*To let the user know which navigation link he is at*/
#active {
    background-color: #FF9933;  /*id more specific than classes, so should override any CSS applied to the parent container*/
}

.dropdown-content {
    position: absolute;/*if relative, it will just go with the normal flow of the page, and expand the height of the navbar. Position absolute means that (i) the target element is positioned relative to the nearest positioned ancestor, and (ii) it ignores the normal flow of the page*/
    display: none; /*display: none; is commonly used with JavaScript to hide and show elements without deleting and recreating them.*/
    z-index: 1; /*so that the dropdown menu is stacked in front of the element directly below which it happens to overlap with*/
    background-color: #454545;  /*otherwise, the links will have no background color. Why does it not inherit the css property of <ul>?*/
    width: inherit;     /*not working. Why not inheriting the same width from .dropbtn parent class?*/
    
}

.dropdown:hover .dropdown-content {
    display: block;
}   /*to display the dropdown links upon hover. Displayed as block rather than inline for vertical menu. Also to make the entire area surrounding <a> clickable*/
/*why is the dropdown content not affect by the overflow: hidden property of the parent container? Because of the specificity?*/
